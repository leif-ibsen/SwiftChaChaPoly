{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftchachapoly\/cryptokit"]}],"identifier":{"url":"doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly\/CryptoKit","interfaceLanguage":"swift"},"kind":"article","sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly\/Performance","doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly\/References"],"title":"Additional Information"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","modules":[{"name":"SwiftChaChaPoly"}],"title":"CryptoKit Compatibility","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"","type":"heading","anchor":"","level":2},{"type":"heading","anchor":"Example-1","text":"Example 1","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftChaChaPoly encrypts, CryptoKit opens."}]},{"syntax":"swift","code":["import CryptoKit","import SwiftChaChaPoly","","let msg = Bytes(\"Hi, there\".utf8)","let aad = Bytes(\"The AAD\".utf8)","","let key = Bytes(repeating: 7, count: 32)","let nonce = Bytes(repeating: 1, count: 12)","","let chacha = try ChaChaPoly(key, nonce)","var ct = msg","let tag = chacha.encrypt(&ct, aad)","","\/\/ ct contains the ciphertext","","let ckKey = CryptoKit.SymmetricKey(data: key)","let ckNonce = try CryptoKit.ChaChaPoly.Nonce(data: nonce)","let sealedBox = try CryptoKit.ChaChaPoly.SealedBox(nonce: ckNonce, ciphertext: ct, tag: tag)","let pt = try CryptoKit.ChaChaPoly.open(sealedBox, using: ckKey, authenticating: aad)","print(String(bytes: pt, encoding: .utf8)!)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"type":"codeListing","syntax":"swift","code":["Hi, there"]},{"level":3,"type":"heading","anchor":"Example-2","text":"Example 2"},{"inlineContent":[{"type":"text","text":"CrypotoKit seals, SwiftChaChaPoly decrypts."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import CryptoKit","import SwiftChaChaPoly","","let msg = Bytes(\"Hi, there\".utf8)","let aad = Bytes(\"The AAD\".utf8)","","let ckKey = CryptoKit.SymmetricKey(size: .bits256)","let sealedBox = try CryptoKit.ChaChaPoly.seal(msg, using: ckKey, authenticating: aad)","","let key = ckKey.withUnsafeBytes {","    return Bytes($0)","}","let nonce = Bytes(sealedBox.nonce)","let chacha = try ChaChaPoly(key, nonce)","var ct = Bytes(sealedBox.ciphertext)","","\/\/ ct contains the ciphertext","","let ok = chacha.decrypt(&ct, Bytes(sealedBox.tag), aad)","print(String(bytes: ct, encoding: .utf8)!)"]},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"type":"codeListing","code":["Hi, there"],"syntax":"swift"}]}],"abstract":[{"type":"text","text":"SwiftChaChaPoly is compatible with Appleâ€™s CryptoKit framework"}],"references":{"doc://SwiftChaChaPoly/documentation/SwiftChaChaPoly/References":{"title":"References","url":"\/documentation\/swiftchachapoly\/references","kind":"article","type":"topic","abstract":[{"type":"text","text":"Algorithms from the following papers have been used in the implementation"}],"identifier":"doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly\/References","role":"article"},"doc://SwiftChaChaPoly/documentation/SwiftChaChaPoly":{"identifier":"doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly","url":"\/documentation\/swiftchachapoly","title":"SwiftChaChaPoly","abstract":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"type":"topic","role":"collection","kind":"symbol"},"doc://SwiftChaChaPoly/documentation/SwiftChaChaPoly/Performance":{"abstract":[{"type":"text","text":"Encryption and decryption speed"}],"type":"topic","kind":"article","role":"article","identifier":"doc:\/\/SwiftChaChaPoly\/documentation\/SwiftChaChaPoly\/Performance","title":"Performance","url":"\/documentation\/swiftchachapoly\/performance"}}}